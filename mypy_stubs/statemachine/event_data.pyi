# from .state import State as State
# from .statemachine import StateMachine as StateMachine
# from .transition import Transition as Transition
# from dataclasses import dataclass
# from typing import Any

from typing import Any

def __getattr__(name: str) -> Any: ...

# @dataclass
# class TriggerData:
#    machine: StateMachine
#    event: str
#    model: Any = ...
#    args: tuple = ...
#    kwargs: dict = ...
#    def __post_init__(self) -> None: ...
#    def __init__(self, machine, event, args=..., kwargs=...) -> None: ...
#
# @dataclass
# class EventData:
#    trigger_data: TriggerData
#    transition: Transition
#    state: State = ...
#    source: State = ...
#    target: State = ...
#    result: Any | None = ...
#    executed: bool = ...
#    machine = ...
#    def __post_init__(self) -> None: ...
#    @property
#    def event(self): ...
#    @property
#    def args(self): ...
#    @property
#    def extended_kwargs(self): ...
#    def __init__(self, trigger_data, transition, result=..., executed=...) -> None: ...
